# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

->          /sso                                    sso.Routes

# Map static resources from the /public folder to the /assets URL path
+notiming
GET         /assets/*file                           @controllers.Assets.versioned(path="/public", file: Asset)

# Service health check
GET         /service/gtg                            @controllers.ServiceCheckController.gtg
GET         /service/healthcheck                    @warwick.healthcheck.InjectedHealthcheckController.index

# Other services
POST        /service/flexipicker                    @controllers.FlexiPickerController.queryJson

GET         /                                       @controllers.IndexController.home
GET         /assessments                            @controllers.AssessmentsController.index
GET         /assessment/:id                         @controllers.AssessmentController.view(id: UUID)
POST        /assessment/:id                         @controllers.AssessmentController.start(id: UUID)
POST        /assessment/:id/done                    @controllers.AssessmentController.finish(id: UUID)
POST        /assessment/:id/upload                  @controllers.AssessmentController.uploadFiles(id: UUID)

# https://repo.elab.warwick.ac.uk/projects/EXAMS/repos/onlineexams/pull-requests/44/overview?commentId=32833
+nocsp
GET         /assessment/:id/file/:fileID            @controllers.AssessmentController.downloadFile(id: UUID, fileID: UUID)

POST        /assessment/:id/file/:fileID/delete     @controllers.AssessmentController.deleteFile(id: UUID, fileID: UUID)

# https://repo.elab.warwick.ac.uk/projects/EXAMS/repos/onlineexams/pull-requests/44/overview?commentId=32833
+nocsp
GET         /assessment/:id/attachment/:fileID      @controllers.AssessmentController.downloadAttachment(id: UUID, fileID: UUID)

# Websocket
GET         /websocket                              @controllers.WebSocketController.socket


## Sysadmins ##

GET         /sysadmin                               @controllers.sysadmin.SysadminTestController.home()
GET         /sysadmin/upload-test                   @controllers.sysadmin.SysadminTestController.uploadTest()
GET         /sysadmin/websocket-test                @controllers.WebSocketController.websocketTest()
GET         /sysadmin/broadcast-test                @controllers.WebSocketController.broadcastTest()
POST        /sysadmin/broadcast-test                @controllers.WebSocketController.sendBroadcast()
POST        /sysadmin/upload-test/save              @controllers.sysadmin.SysadminTestController.receiveUpload()
GET         /sysadmin/masquerade                    @controllers.sysadmin.MasqueradeController.masquerade
GET         /sysadmin/sent-emails                   @controllers.sysadmin.ViewEmailsController.listAll(page: Int ?= 0)
GET         /sysadmin/sent-emails/:id               @controllers.sysadmin.ViewEmailsController.viewEmail(id: UUID)
GET         /sysadmin/emails                        @controllers.sysadmin.EmailQueueController.queued()
POST        /sysadmin/emails/:id                    @controllers.sysadmin.EmailQueueController.enqueue(id: UUID)
GET         /sysadmin/mywarwick                     @controllers.sysadmin.MyWarwickQueueController.queued()
POST        /sysadmin/mywarwick/reschedule          @controllers.sysadmin.MyWarwickQueueController.reschedule(triggerName: String, triggerGroup: String)
GET         /sysadmin/assessments-test              @controllers.sysadmin.SysadminTestController.assessmentComponents()
GET         /sysadmin/assessment-members-test       @controllers.sysadmin.SysadminTestController.assessmentComponentMembers()

POST        /sysadmin/test/email                    @controllers.sysadmin.SysadminTestController.sendEmail()
POST        /sysadmin/test/mywarwick                @controllers.sysadmin.SysadminTestController.sendMyWarwick()
POST        /sysadmin/test/upload                   @controllers.sysadmin.SysadminTestController.uploadFile()
GET         /sysadmin/test/:id/download             @controllers.sysadmin.SysadminTestController.downloadFile(id: UUID)

+nocsrf
POST        /api/errors/js                          @controllers.api.ErrorsController.js

## Fallbacks ##

# Handle trailing slashes in URLs
GET         /*path/                                 @controllers.IndexController.redirectToPath(path: String)

