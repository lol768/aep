# This is the configuration file for default setttings the application.
# Connection password credentials and secret keys should be kept out of this file.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

app {
  name.uppercase = "OnlineExams"
  name.id = "onlineexams"
  name.full = "Alternative Exams Portal"
  allowMasqUrls = false

  # Override this locally to use entirely different webgroups from prod
  webgroup.prefix = "in-"${app.name.id}"-"

  assessmentManagerGroup = "onlineexams-assessment-manager"
  contactEmail = "tabula@warwick.ac.uk"
  testUsers = []
  importStudentExtraTime = false
  overwriteAssessmentTypeOnImport = true
  messageMaxLength = 1000
  twoWayMessages = false
}

environment.production = false

memcached.consistentHashing = true

play {
  i18n.langs = [ "en" ]

  http {
    secret.key = "changeme"

    # Trust all internal IP addresses for X-Forwarded
    forwarded.trustedProxies = [ "137.205.0.0/16", "10.0.0.0/8", "::1", "127.0.0.1" ]

    parser {
      # Max total size of uploaded files in a request
      maxDiskBuffer = ${uploads.maxTotalFileSize}

      # Max total size of a non-multipart form submission.
      maxMemoryBuffer = 1m
    }

    flash.sameSite = strict
  }

  allowGlobalApplication = false

  evolutions {
    enabled = true
    autoApply = true
  }

  server {
    http {
      port = 8080
      port = ${?http.port}
    }

    akka {
      default-host-header = ${domain}
    }
  }

  modules {
    enabled += system.AppModule
    enabled += system.HealthChecksModule
    enabled += system.ThreadsModule
    enabled += warwick.sso.SSOClientModule
    enabled += uk.ac.warwick.util.mywarwick.MyWarwickModule
    disabled += org.databrary.PlayLogbackAccessModule

    disabled += play.api.cache.EhCacheModule
    enabled += com.github.mumoshu.play2.memcached.MemcachedModule

    cache {
      defaultCache = default
      bindCaches = ["play"]
    }
  }

  filters {
    // Access logging filter must be first; CSRF same site cookie filter must be before (default) CSRF filter
    enabled = [org.databrary.PlayLogbackAccessFilter] ${play.filters.enabled}
    enabled += play.filters.csp.CSPFilter
    enabled += system.MasqueradeSetCookieFilter
    enabled += system.AdditionalSecurityHeadersFilter
    enabled += system.CacheDefaultHeadersFilter
    enabled += warwick.core.timing.ServerTimingFilter
    enabled += play.filters.gzip.GzipFilter

    headers {
      reportTo = "{\"group\":\"default\",\"max_age\":31536000,\"endpoints\":[{\"url\":\"https://warwick.report-uri.com/a/t/g\"}],\"include_subdomains\":true}"
      nel = "{\"report_to\":\"default\",\"max_age\":31536000,\"include_subdomains\":true}"
      featurePolicy = ${featurePolicy}
      referrerPolicy = "strict-origin-when-cross-origin"

      # This must contain no-cache in order for CSRF cookies to be set
      # https://warwick.slack.com/archives/GC024AH3L/p1535127425000100
      cacheControl = "no-cache"
    }

    hosts {
      allowed += ${domain}
      allowed += ".lnx.warwick.ac.uk:8080"
      allowed += ".lnx.warwick.ac.uk:8443"
      allowed += "127.0.0.1:8080"
      allowed += "127.0.0.1:8443"
      allowed += "" // HTTP/1.0 requests
    }

    csrf {
      cookie {
        name = "__Host-"${app.name.uppercase}"-CSRF"
        secure = true
        httpOnly = true
        sameSite = lax
      }

      header.bypassHeaders {
        OnlineExams-Upload = "*"
      }
    }

    csp {
      directives {
        default-src = "'none'" // Deny by default, require everything to be explicitly set
        img-src = "'self' data:"
        style-src = "'self' 'report-sample' https://fonts.googleapis.com"
        font-src = "'self' data: https://fonts.gstatic.com"
        script-src = "'self' 'report-sample'"
        frame-src = "'self' https://websignon.warwick.ac.uk "${mywarwick.instances.0.baseUrl}
        connect-src = "'self' "${mywarwick.instances.0.baseUrl}" wss://"${domain}" https://status.warwick.ac.uk"
        object-src = "'none'"
        form-action = "'self'"
        frame-ancestors = "'none'"
        manifest-src = "'self'"
        report-uri = "https://warwick.report-uri.com/r/t/csp/enforce"
        report-to = "default"
      }
    }
  }

  mailer {
    host = "smtp.mailtrap.io"
    port = 587
    tlsRequired = true
  }
}

// This is extended above
featurePolicy = "accelerometer 'self' "${mywarwick.instances.0.baseUrl}
featurePolicy = ${featurePolicy}"; camera 'none'"
featurePolicy = ${featurePolicy}"; geolocation 'none'"
featurePolicy = ${featurePolicy}"; gyroscope 'self' "${mywarwick.instances.0.baseUrl}
featurePolicy = ${featurePolicy}"; magnetometer 'none'"
featurePolicy = ${featurePolicy}"; microphone 'none'"
featurePolicy = ${featurePolicy}"; payment 'none'"
featurePolicy = ${featurePolicy}"; usb 'none'"

akka {
  # Funnel Akka logging through SLF4J like everything else
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  # Double play's default parallelism.
  # https://www.playframework.com/documentation/2.6.x/ThreadPools#Configuring-the-default-thread-pool
  # Seems like some (scheduling) tasks are using the default pool more than they should.
  # In the meantime, let's allow more threads in the default pool.
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    default-dispatcher = {
      fork-join-executor {
        parallelism-min = 16
      }
    }
  }
}

slick.dbs.default {
  profile = "domain.ExtendedPostgresProfile$"
  db {
    driver = org.postgresql.Driver
    numThreads = 10
    connectionTimeout = 30000
  }
}

blobStore.default {
  provider = "swift"
  swift.endpoint = "https://objectstorage.warwick.ac.uk/auth/v2.0"
}

sso-client {
  httpbasic {
    allow = true
  }
  mode = new
  cluster {
    enabled = true
    db = default
  }
  shire {
    sscookie {
      name = "__Host-SSO-SSC-"${app.name.uppercase}
      path = "/"
      secure = true
      samesite = none
    }
    location = "https://"${domain}"/sso/acs"
    providerid = "urn:"${domain}":"${app.name.id}":service"
  }
  logout = "https://"${domain}"/sso/logout"
  role-groups {
    admin = ${app.webgroup.prefix}"admins"
    sysadmin = ${app.webgroup.prefix}"sysadmins"
    masquerader = ${sso-client.masquerade.group}
    approver = ${app.webgroup.prefix}"approvers"
  }
  masquerade {
    group = ${app.webgroup.prefix}"masqueraders"
  }
}

# Enable logback-access
logbackaccess.config.resource=logback-access.xml

threads {
  mailer {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 50
    }
  }
  userLookup {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 50
    }
  }
}

uploads {
  # The total file size of all uploaded files in the request
  maxTotalFileSize = 4g

  # The individual maximum file size of a single file. Obviously don't make this bigger than maxTotalFileSize
  maxIndividualFileSize = ${uploads.maxTotalFileSize}

  allowedMimeTypes = [
    "application/*",
    "audio/*",
    "example/*",
    "font/*",
    "image/*",
    "message/*",
    "model/*",
    "multipart/*",
    "text/*",
    "video/*"
  ]

  headers {
    # img-src 'self' data:         - View images inline; allow data: for Safari media player
    # object-src 'self'            - Allow plugins to load for the current context
    # plugin-types application/pdf - Only allow the PDF plugin
    # style-src 'unsafe-inline'    - PDF viewer Chrome?
    # media-src 'self'             - Needed to load the audio/video
    contentSecurityPolicy = "default-src 'none'; img-src 'self' data:; object-src 'self'; plugin-types application/pdf; style-src 'unsafe-inline'; media-src 'self'; report-uri https://warwick.report-uri.com/r/t/csp/enforce; report-to default"
  }
}

virusscan {
  # TODO I've electively disabled this for now but maybe we'll turn it on?
  scan-uploads = false
  api.host = "https://virusscan.warwick.ac.uk"
}

tabula {
  usercode = "onlineexams-tabula-api-user"
  root.url = "https://tabula-test.warwick.ac.uk"
  examProfileCodes = [
    "EXAPR20V2",  # April 2020 Examination Session
    "EXMAY20",    # May 2020 Examination Session
    "EXJUN20V3",  # May/June Examinations 2020 (weeks 4-9 Summer Term)
    "EXSUM20"     # Sandbox 19/20 exams (doesn't exist for real data)
  ]
}
